// ----------------------------------
// RSDK Project: Sonic 1/Sonic 2
// Script Description: Decoration
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

//-------Aliases-------//
private alias 28 : TYPE_DECORATION

private alias Object.Value3 : Object.AccessoryAnimation
private alias Object.Value4 : Object.AccessoryFrame
private alias Object.Value5 : Object.AccessoryFrameAlt

reserve function MetalIntro
reserve function PlayerObject_CheckHitBoss

//CASE KEY

//INTRO

//0 setup
//1 fly in
//2 fly down
//3 eyes look

//BOSS

//4 stuff

function PlayerObject_CheckHitBoss	//checks when you can hti t

//all animation checks below can kill you

CheckEqual(object.animation, 6)
temp2 = checkResult
CheckEqual(object.animation, 10)
temp2 |= checkResult


if temp2 == 0	//you can hit him
	CheckEqual(object[currentPlayer].animation, ANI_JUMPING)
	temp0 = checkResult
	CheckEqual(object[currentPlayer].animation, ANI_SPINDASH)
	temp0 |= checkResult
	CheckEqual(object[currentPlayer].animation, ANI_GLIDING)
	temp0 |= checkResult
	if object[0].propertyValue == 6
		CheckEqual(object[currentPlayer].animation, 56)
		temp0 |= checkResult	
		CheckEqual(object[currentPlayer].animation, 57)
		temp0 |= checkResult			
	end if	

	if object[0].propertyValue == 7	
		CheckEqual(object[currentPlayer].animation, 52)
		temp0 |= checkResult		
	end if
	
		CheckEqual(object[currentPlayer].animation, ANI_PEELOUT)
		temp0 |= checkResult
		CheckEqual(object[currentPlayer].animation, 53)
		temp0 |= checkResult			
	
	if object[0].propertyValue == 9
		CheckEqual(object[currentPlayer].animation, ANI_RUNNING)
		temp0 |= checkResult	
		CheckEqual(object[currentPlayer].animation, 52)
		temp0 |= checkResult		
		CheckEqual(object[currentPlayer].animation, 54)
		temp0 |= checkResult			
	end if
	if object[0].propertyValue == 10
		CheckEqual(object[currentPlayer].animation, 43)
		temp0 |= checkResult	
	end if	
	if object[currentPlayer].propertyValue == 11
		CheckEqual(object[currentPlayer].animation, 52)
		temp0 |= checkResult	
	end if	
end if	

	if temp0 == 1
		FlipSign(object[currentPlayer].xvel)
		object[currentPlayer].xvel >>= 1
		object[currentPlayer].speed = object[currentPlayer].xvel
		FlipSign(object[currentPlayer].yvel)
		object[currentPlayer].yvel >>= 1
		if object[currentPlayer].animation == ANI_GLIDING
			object[currentPlayer].value1 = 0
			object[currentPlayer].animation = ANI_GLIDING_DROP
			object[currentPlayer].state = PlayerObject_KnuxGlideDrop
		end if
		checkResult = 1
	else
		if object[currentPlayer].state != PlayerObject_Death
			if object[currentPlayer].value7 == 0
				if object[currentPlayer].value8 == 0
					object[currentPlayer].state = PlayerObject_Hurt
					if object[currentPlayer].xpos > object.xpos
						object[currentPlayer].speed = 0x20000
					else
						object[currentPlayer].speed = -0x20000
					end if
				end if
			end if
		end if
		checkResult = 0
	end if

end function


function MetalIntro
				object.ypos += object.yvel
				object.xpos += object.xvel


		switch object.state
			case 0
				temp0 = object.ixpos
				temp0 += screen.xcenter
				stage.newXBoundary1 = temp0
				temp0 = object.ixpos
				temp0 += screen.xcenter
				stage.newXBoundary2 = temp0
				temp0 = object.iypos
				temp0 += 64


				object.value1 = 8	//health

			
				object.scale = 10
				

				object.animation = 2

				currentPlayer = 0

				temp0 = 4245	//sonlvl positions work
				temp0 <<= 16
				Abs(temp0)

				


				//BoxCollisionTest(C_TOUCH, object.entityPos, -0, -160, 0, 160, currentPlayer, object[currentPlayer].value40, object[currentPlayer].value38, object[currentPlayer].value41, object[currentPlayer].value39)
				if object[0].xpos >= temp0
				

					object[0].xpos = temp0

					music.volume -= 1	

					currentPlayer = 0
					while currentPlayer < 2
						object[currentPlayer].speed = 0
						object[currentPlayer].xvel = 0
					
						if object[currentPlayer].gravity == GRAVITY_AIR
							object[currentPlayer].animation = ANI_JUMPING		
							object[currentPlayer].state = PlayerObject_HandleAir
						else
							object[currentPlayer].animation = ANI_STOPPED		
							object[currentPlayer].state = PlayerObject_Blank
						end if			
						object[currentPlayer].controlMode = -1
						
						currentPlayer++
					loop

			
					

					if music.volume == 0
						object.state++
					end if


				end if
				
			break
			case 1
				object.value0++
				if object.value0 == 1
					PlaySfx(SfxName[Bomb Dash], 0)
					SetMusicTrack("Suprise.ogg", 0, 1)
					PlayMusic(0)
				end if

				currentPlayer = 0
				while currentPlayer < 2
					object[currentPlayer].speed = 0
					object[currentPlayer].xvel = 0
					object[currentPlayer].animation = ANI_LOOKINGUP					
					object[currentPlayer].controlMode = -1
					object[currentPlayer].state = PlayerObject_Blank
					currentPlayer++
				loop		

				
				object.scale += 12
				object.yvel -= 0x500

				object.animation = 2

				if object.value0 >= 200
					object.yvel = 0
					object.value0 = 0
					object.state++
				end if

			break			
			case 2
				currentPlayer = 0
				while currentPlayer < 2
					object[currentPlayer].speed = 0
					object[currentPlayer].xvel = 0
					object[currentPlayer].animation = ANI_LOOKINGUP					
					object[currentPlayer].controlMode = -1
					object[currentPlayer].state = PlayerObject_Blank
					currentPlayer++
				loop

				object.scale = 512

					
				Object.AccessoryAnimation = 1

				object.value0++


				object.yvel += 0x800

				object.animation = 4

				
				if object.value0 >= 150
					object.yvel = 0
					object.value0 = 0
					object.state++
				end if	
				
			break
			case 3
				currentPlayer = 0
				while currentPlayer < 2
					object[currentPlayer].speed = 0
					object[currentPlayer].xvel = 0
					object[currentPlayer].animation = ANI_LOOKINGUP					
					object[currentPlayer].controlMode = -1
					object[currentPlayer].state = PlayerObject_Blank
					currentPlayer++
				loop

	
				
				object.value0++

				object.animation = 3

				if object.value0 >= 100
					object.yvel = 0
							
					object.value0 = 0
					object.state++
				end if	
			break
			case 4	
				object.value0++

			
				
				object.animation = 8
				
				
					object.xvel -= 0x2000
					Object.AccessoryAnimation = 3
					object.direction = FLIP_X
			
				//	object.xvel += 0x2000
				//	Object.AccessoryAnimation = 2
				

				if object.value0 == 50
					object[0].state = PlayerObject_HandleAir
					object[1].state = PlayerObject_HandleAir
					object[0].controlMode = 0
					object[1].controlMode = 0	


					object.xvel += 0
					object.xvel -= 0
					object.value0 = 0
					object.state++
				end if


			break
			case 5	//boss starts
				
				Object.AccessoryAnimation = 2
				object.direction = 0
				object.value2 = 6	//fal state
				object.xvel = 0
				object.value0++
				if object.value0 == 1
					CreateTempObject(TypeName[Plasma Ball], 0, object.xpos, object.ypos)
					object[tempObjectPos].xpos += 0x80000
				end if
				
				if object.value0 == 50
					CreateTempObject(TypeName[Plasma Ball], 0, object.xpos, object.ypos)
					object[tempObjectPos].xpos += 0x80000
				end if


				if object.value0 == 240
					object.value0 = 0
					object.state++
				end if

			break
			case 6 //drop down
				
				
				ObjectTileCollision(CSIDE_FLOOR, 0, 20, 0) 
				if checkResult == 1
					object.state++
				else
					object.yvel += 0x2000
					object.value2 = 6
				end if
			break
			case 7
				object.value2 = 8
					object.value0++
					if object.value0 == 1
					PlaySfx(SfxName[Bomb Dash], 0)
					end if
					object.animation = 1
					Object.AccessoryAnimation = 2
					object.yvel = 0
					
					if object.value0 == 90
						Object.AccessoryAnimation = 0
						object.value0 = 0
						object.state++
					end if	
			break		
			case 8	//dash right
				object.value0++
				if object.value0 == 1
				PlaySfx(SfxName[Peelout Release],0)
				end if

			
				object.xvel += 0x4800
			
				object.animation = 6
				if object.outOfBounds == 1
					object.xvel = 0
					object.value0 = 0
					object.animation = 8
					object.direction = FLIP_X
					Object.AccessoryAnimation = 3
					object.state++
				end if
			break
			case 9 //fly back up
				object.value0++
				object.xvel -= 0x2800
				object.yvel -= 0x1560
				if object.value0 >= 50
					object.xvel = 0
					object.yvel = 0
					object.value0 = 0
					object.state++
				end if
			break
			case 10
				object.value2 = 11
				object.value0++
				if object.value0 == 1
					CreateTempObject(TypeName[Plasma Ball], 0, object.xpos, object.ypos)
					object[tempObjectPos].xpos -= 0x80000
				end if
				
				if object.value0 == 50
					CreateTempObject(TypeName[Plasma Ball], 0, object.xpos, object.ypos)
					object[tempObjectPos].xpos -= 0x80000
				end if


				if object.value0 == 240
					object.value0 = 0
					object.state++
				end if

			break
			case 11
			

				object.yvel += 0x2000
				ObjectTileCollision(CSIDE_FLOOR, 0, 20, 0) 
				if checkResult == 1
					object.state++
				else
					object.yvel += 0x2000
					object.value2 = 11
				end if
			break	
			case 12
					object.value2 = 13
					object.value0++
					if object.value0 == 1
					PlaySfx(SfxName[Bomb Dash], 0)
					end if
					object.animation = 1
					Object.AccessoryAnimation = 3
					object.yvel = 0

					if object.value0 == 90
						PlaySfx(SfxName[Peelout Release],0)
						Object.AccessoryAnimation = 0
						object.value0 = 0
						object.state++
					end if	

			break		
			case 13
			
				object.value0++
				if object.value0 == 1
				PlaySfx(SfxName[Peelout Release],0)
				end if

				object.xvel -= 0x4800
			
				object.animation = 6
				if object.outOfBounds == 1
					object.xvel = 0
					object.value0 = 0
					object.animation = 8
					object.direction = 0
					Object.AccessoryAnimation = 3
					object.state++
				end if
			break
			case 14
				object.value0++
				object.xvel += 0x2800
				object.yvel -= 0x1560
				if object.value0 >= 50
					object.xvel = 0
					object.yvel = 0
					object.value0 = 0
					object.state = 5
				end if
			break			
			case 15	//hurt
				object.value0++
				object.animation = 9
				if object.value0 == 40
					object.value0 = 0
					object.animation = 10
					object.state = object.value2
				end if
			break
			case 16	//dying
				object.value0++
				object.animation = 5
				if object.value0 < 50	
					Rand(temp0, 96)
					temp0 -= 48
					temp0 <<= 16
					temp0 += object.xpos
					Rand(temp1, 64)
					temp1 -= 24
					temp1 <<= 16
					temp1 += object.ypos
					CreateTempObject(TypeName[Smoke Puff], object.entityPos, temp0, temp1)
					PlaySfx(SfxName[Explosion], 0)	
				end if	

				if object.value0 == 100
					object.value0 = 0		
					object.state++
				end if

			break
			case 17
				object.yvel += 0x2500
				ObjectTileCollision(CSIDE_FLOOR, 0, 15, 0) 
				if checkResult == 1
					object.yvel = 0
					object.animation = 7
					PlaySfx(SfxName[Boss Hit], 0)
					object.state++
				end if
			break
			case 18
				object.value0++
				if object.value0 == 100
					object.animation = 5
					object.yvel -= 0x4800
					object.value0 = 0
					object.state++
				end if
			break
			case 19 //boss over resume everything
				if object.direction == 1
					object.direction = 0
				end if
				object[1].controlmode = -1
				object.xvel += 0x2800
				music.volume -= 2
				saveRAM[9000] = 1
				if object.outOfBounds == 1
					SetMusicTrack("Combination.ogg", 0, 51488) //51488
					PlayMusic(0)

					temp0 = tileLayer[0].xsize
					temp0 <<= 16
					stage.newXBoundary2 = temp0	
					object.type = TypeName[Blank Object]
				end if
				
			break
		end switch


		if object.state >= 2

		ProcessAnimation()

		end if



    foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
        temp0 = object[currentPlayer].collisionRight
        temp0 <<= 16
        temp0 += object[currentPlayer].xpos
        temp1 = stage.curXBoundary2
        temp1 <<= 16
        if temp0 > temp1
            object[currentPlayer].xvel = 0
            object[currentPlayer].speed = 0
            object[currentPlayer].xpos = temp1
            temp0 = object[currentPlayer].collisionRight
            temp0 <<= 16
            object[currentPlayer].xpos -= temp0
        end if

			

		CheckGreater(object.state, 3)
		temp2 = checkResult
		CheckLower(object.state, 14)
		temp2 &= checkResult	
		CheckNotEqual(object.state, 9)
		temp2 &= checkResult	
		CheckNotEqual(object.state, 13)
		temp2 &= checkResult					
		if temp2 == 1
			BoxCollisionTest(C_TOUCH, object.entityPos, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, currentPlayer, object[currentPlayer].value40, object[currentPlayer].value38, object[currentPlayer].value41, object[currentPlayer].value39)
			CheckEqual(checkResult, 1)
			temp2 = checkResult
			if temp2 == 1
				CallFunction(PlayerObject_CheckHitBoss)
					if checkResult == 1
						if object.value1 <= 0	//defeated
                            PlaySfx(SfxName[Hurt], 0)
                            player.score += 1000
							object.yvel = 0
							object.xvel = 0

							object.value0 = 0
							object.state = 16
							screen.shakeX = 5
							screen.shakeY = 5							
						else	//he was hit
							object.value1--	
							object.yvel = 0
							object.xvel = 0				
							object.value0 = 0			
							PlaySfx(SfxName[Boss Hit], 0)
							object.state = 15
						end if	
				end if
			end if
		end if




	next	


end function


event ObjectMain

	CallFunction(MetalIntro)


end event

event ObjectDraw
	switch object.animation
		case 2	//block
			temp0 = object.animationTimer
			temp0 /= 3	//speed
			object.animationTimer++
			object.animationTimer %= 4	//how many frames
			DrawSpriteFX(temp0, FX_SCALE, object.xpos, object.ypos)
		break
		case 20	//block
			temp0 = object.animationTimer
			temp0 /= 3	//speed
			temp0 += 10
			object.animationTimer++
			object.animationTimer %= 4	//how many frames
			DrawSpriteFX(temp0, FX_SCALE, object.xpos, object.ypos)
		break		
	end switch



	switch Object.AccessoryAnimation
		
	// ACCESSORY_NONE is an unhandled case since it's supposed to show nothing
	
	case 1
		temp0 = object.AccessoryFrame	
		temp0 /= 3	//speed
		temp0 += 2	//starting frame
		object.AccessoryFrame++
		object.AccessoryFrame %= 12	//how many frames
		DrawSpriteXY(temp0, object.xpos, object.ypos)
		break
	case 2
		temp0 = Object.AccessoryFrameAlt
		temp0 /= 3	//speed
		temp0 += 6	//starting frame
		object.AccessoryFrameAlt++
		object.AccessoryFrameAlt %= 12	//how many frames
		DrawSpriteXY(temp0, object.xpos, object.ypos)
		break
	case 3
		temp0 = Object.AccessoryFrameAlt
		temp0 /= 3	//speed
		temp0 += 12	//starting frame
		object.AccessoryFrameAlt++
		object.AccessoryFrameAlt %= 12	//how many frames
		DrawSpriteXY(temp0, object.xpos, object.ypos)
		break	
	end switch	


	if object.state >=  2
	DrawObjectAnimation()
	object.priority = PRIORITY_ACTIVE
	end if




end event


event ObjectStartup
	LoadSpriteSheet("IIZ/Objects1.gif")

	//Metal Flying Towards Us

	SpriteFrame(-40, -50, 79, 104, 1, 407)	//0
	SpriteFrame(-40, -50, 79, 104, 81, 407)

	//His flames

	SpriteFrame(0, 0, 0, 0, 0, 0)	//2
	SpriteFrame(-8, -5, 16, 16, 253, 437)	
	SpriteFrame(0, 0, 0, 0, 0, 0)
	SpriteFrame(-12, -7, 24, 24, 236, 454)	



	//flames but more to the side

	SpriteFrame(0, 0, 0, 0, 0, 0)	//6
	SpriteFrame(-16, -5, 16, 16, 253, 437)	
	SpriteFrame(0, 0, 0, 0, 0, 0)
	SpriteFrame(-20, -7, 24, 24, 236, 454)	

	SpriteFrame(-20, -25, 40, 48, 161, 388)	//10
	SpriteFrame(-20, -25, 40, 48, 202, 388)	//10	


	SpriteFrame(0, 0, 0, 0, 0, 0)	//12
	SpriteFrame(0, -5, 16, 16, 253, 437)	
	SpriteFrame(0, 0, 0, 0, 0, 0)
	SpriteFrame(2, -7, 24, 24, 236, 454)	


	foreach (TypeName[Metal Sonic], arrayPos0, ALL_ENTITIES)

		LoadAnimation("MetalSonic.ani")
		

	next


end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
end event
